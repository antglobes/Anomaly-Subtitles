local subs_enabled = true
local hearing_distance = 25
local hear_chance = 100
local hear_cooldown = 0
local hear_on_cd = false

function mob_sound.pick_sound_from_set(set)
	local sndset = mob_sound.snd[set]
	if not sndset then
		abort("no sndset set=%s", set)
		print_table(snd[set])
		return nil
	end
	-- 1) Выбираем случайный звук из набора:               
	local chance = 1
	local picked_snd = nil
	for n, s in pairs(mob_sound.snd[set]) do
		if math.random(chance) == 1 then
			picked_snd = s
		end
		chance = chance + 1
	end
	if picked_snd:find("trader") ~= nil then
		subtitle_him(picked_snd, "sidorovich")
	end
	if picked_snd:find("red_forest") ~= nil then
		subtitle_him(picked_snd, "forester")
	end
	return picked_snd
end

function subtitle_him(soundname, npc)
	if (not subs_enabled) then
		return
	end
	if  (hear_on_cd) then
		return
	end
	rnd = math.random(0,100)
	if (not (hear_chance > rnd)) then
		return
	end
	soundnum = tonumber(string.match(soundname, "(%d+)$"))
	soundname = soundname:gsub('\\\\', ''):gsub('\\', '/',1):gsub('\\','/')
	--some operations due to strange stalker phrases system
	fp = soundname:find("fight/fire/fire_,")
	if (fp  ~= nil) then
		spat = soundname:find(",")
		if not spat then return end
		ssoundname = soundname:sub(1, spat - 1)
		local soundsnum = count_sounds_of_this(ssoundname)
		if tonumber(soundnum) > soundsnum then
			pat = "fight/fire/fire_,"
			soundname = soundname:gsub(pat, "")
			numpos = soundname:find(soundnum)
			soundnum = soundnum - soundsnum
			soundname = soundname:sub(1, numpos - 1) .. soundnum
		else
			pat = soundname:find(",")
			soundname = soundname:sub(1, pat - 1) .. soundnum
		end
	end
	fp = soundname:find("fight/attack/attack_,")
	if (fp ~= nil) then
		spat = soundname:find(",")
		if not spat then return end
		ssoundname = soundname:sub(1, spat - 1)
		local soundsnum = count_sounds_of_this(ssoundname)
		if tonumber(soundnum) > soundsnum then
			pat = "fight/attack/attack_,"
			soundname = soundname:gsub(pat, "")
			numpos = soundname:find(soundnum)
			soundnum = soundnum - soundsnum
			soundname = soundname:sub(1, numpos - 1) .. soundnum
		else
			pat = soundname:find(",")
			soundname = soundname:sub(1, pat - 1) .. soundnum
		end
	end
	fp = soundname:find("fight/attack/attack_many_,")
	if (fp ~= nil) then
		spat = soundname:find(",")
		if not spat then return end
		ssoundname = soundname:sub(1, spat - 1)
		local soundsnum = count_sounds_of_this(ssoundname)
		if tonumber(soundnum) > soundsnum then
			pat = "fight/attack/attack_many_,"
			soundname = soundname:gsub(pat, "")
			numpos = soundname:find(soundnum)
			soundnum = soundnum - soundsnum
			soundname = soundname:sub(1, numpos - 1) .. soundnum
		else
			pat = soundname:find(",")
			soundname = soundname:sub(1, pat - 1) .. soundnum
		end
	end
	fp = soundname:find("fight/attack/attack_one_,")
	if (fp ~= nil) then
		spat = soundname:find(",")
		if not spat then return end
		ssoundname = soundname:sub(1, spat - 1)
		local soundsnum = count_sounds_of_this(ssoundname)
		if tonumber(soundnum) > soundsnum then
			pat = "fight/attack/attack_one_,"
			soundname = soundname:gsub(pat, "")
			numpos = soundname:find(soundnum)
			soundnum = soundnum - soundsnum
			soundname = soundname:sub(1, numpos - 1) .. soundnum
		else
			pat = soundname:find(",")
			soundname = soundname:sub(1, pat - 1) .. soundnum
		end
	end
	fp = soundname:find("fight/backup/backup_,")
	if (fp ~= nil) then
		spat = soundname:find(",")
		if not spat then return end
		ssoundname = soundname:sub(1, spat - 1)
		local soundsnum = count_sounds_of_this(ssoundname)
		if tonumber(soundnum) > soundsnum then
			pat = "fight/backup/backup_,"
			soundname = soundname:gsub(pat, "")
			numpos = soundname:find(soundnum)
			soundnum = soundnum - soundsnum
			soundname = soundname:sub(1, numpos - 1) .. soundnum
		else
			pat = soundname:find(",")
			soundname = soundname:sub(1, pat - 1) .. soundnum
		end
	end
	fp = soundname:find("fight/detour/detour_,")
	if (fp ~= nil) then
		spat = soundname:find(",")
		if not spat then return end
		ssoundname = soundname:sub(1, spat - 1)
		local soundsnum = count_sounds_of_this(ssoundname)
		if tonumber(soundnum) > soundsnum then
			pat = "fight/detour/detour_,"
			soundname = soundname:gsub(pat, "")
			numpos = soundname:find(soundnum)
			soundnum = soundnum - soundsnum
			soundname = soundname:sub(1, numpos - 1) .. soundnum
		else
			pat = soundname:find(",")
			soundname = soundname:sub(1, pat - 1) .. soundnum
		end
	end
	
	--removing 1s in some phrases
	fp = soundname:find("fight/grenade/grenade_1")
	if (fp ~= nil) then
		pat = "fight/grenade/grenade_1"
		soundname = soundname:gsub(pat, "fight/grenade/grenade_")
	end
	
	fp = soundname:find("fight/grenade/grenade_ready_1")
	if (fp ~= nil) then
		pat = "fight/grenade/grenade_ready_1"
		soundname = soundname:gsub(pat, "fight/grenade/grenade_ready_")
	end
	
	--converting subtitle to string id
	soundname = soundname:gsub("/", "_")
	--playing message according to distance and phrase
	if (npc ~= "sidorovich") and (npc ~= "forester") then
		npcpos = npc:position()
		if (npcpos:distance_to(db.actor:position()) < hearing_distance) then
			if npc:is_stalker() then
				icon = npc:character_icon()
				name = npc:character_name()
			else
				icon = nil
				name = "st_noise"
			end
			dynamic_news_helper.send_tip(game.translate_string(soundname), game.translate_string(name), 0, 10, icon, "news", "npc")
		end
	end
	if (npc == "sidorovich") then
		dynamic_news_helper.send_tip(game.translate_string(soundname), game.translate_string("escape_trader_name"), 0, 10, "ui_inGame2_sid", "news", "npc")
	end
	if (npc == "forester") then
		dynamic_news_helper.send_tip(game.translate_string(soundname), game.translate_string("red_forester_name"), 0, 10, "ui_inGame2_forester", "news", "npc")
	end
	hear_on_cd = true
	CreateTimeEvent("hear_cooldown", "hear_cooldown", hear_cooldown, function()
		hear_on_cd = false
		RemoveTimeEvent("hear_cooldown", "hear_cooldown")
		return false
	end)
end

function on_option_change()
		subs_enabled = subtitles_mcm.get_config("enable_subs")
		hearing_distance = subtitles_mcm.get_config("hear_dist")
		hear_chance = subtitles_mcm.get_config("hear_chance")
		hear_cooldown = subtitles_mcm.get_config("hear_cooldown")
end

function count_sounds_of_this(path)
	path = path:gsub('/','\\')
	local flag = true
	for count=1,100 do
		local snd 
		pcall(function()
			snd = sound_object(path..count)
		end)
		if not snd then return end
		if snd:length() == 576 then
			return (count-1)
		end
	end
end

function on_game_start()
	RegisterScriptCallback("on_phrase_callback", subtitle_him)
	RegisterScriptCallback("on_option_change", on_option_change)
	on_option_change()
end